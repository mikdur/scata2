# Generated by Django 5.1.7 on 2025-03-26 13:17

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('scata2', '0020_remove_scatareferenceset_num_seqs_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ScataJob',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Name')),
                ('description', models.TextField(blank=True, max_length=500, null=True, verbose_name='Description')),
                ('create_date', models.DateField(auto_now_add=True, verbose_name='Create date')),
                ('deleted', models.BooleanField(default=False, verbose_name='Deleted')),
                ('public', models.BooleanField(default=False, verbose_name='Public')),
                ('distance', models.FloatField(default=0.015, validators=[django.core.validators.MinValueValidator(0.001, 'Min 0.001'), django.core.validators.MaxValueValidator(0.1, 'Max 0.10')], verbose_name='Clustering distance 0.001 < x < 0.10')),
                ('min_alignment', models.FloatField(default=0.9, validators=[django.core.validators.MinValueValidator(0.5, 'Min 0.5'), django.core.validators.MaxValueValidator(1.0, 'Max 1')], verbose_name='Minimum alignment 0.5 < x < 1.0. Set to 1.0 to force global clustering (if all references are extracted amplicons)')),
                ('mismatch_pen', models.FloatField(default=1, validators=[django.core.validators.MinValueValidator(0, 'Min 0'), django.core.validators.MaxValueValidator(100, 'Max 100')], verbose_name='Mismatch penalty 0 < x < 100')),
                ('open_pen', models.FloatField(default=1, validators=[django.core.validators.MinValueValidator(0, 'Min 0'), django.core.validators.MaxValueValidator(100, 'Max 100')], verbose_name='Gap open penalty 0 < x < 100')),
                ('extend_pen', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0, 'Min 0'), django.core.validators.MaxValueValidator(100, 'Max 100')], verbose_name='Gap extension penalty 0 < x < 100')),
                ('endgap_pen', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0, 'Min 0'), django.core.validators.MaxValueValidator(100, 'Max 100')], verbose_name='End gap weight 0 < x < 100')),
                ('max_homopolymer', models.FloatField(default=3, validators=[django.core.validators.MinValueValidator(0, 'Min 0'), django.core.validators.MaxValueValidator(10, 'Max 10')], verbose_name='Collaps homopolymers longer than this. 0 to disable')),
                ('downsample', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0, 'Min 0'), django.core.validators.MaxValueValidator(100000.0, 'Max 1e5')], verbose_name='Downsample samples with more than this number of reads to this number. 0 to disable.')),
                ('lowfreq', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0, 'Min 0'), django.core.validators.MaxValueValidator(100, 'Max 100')], verbose_name='Remove global low frequency genotypes occuring less than this number of times.')),
                ('repseqs', models.IntegerField(default=3, validators=[django.core.validators.MinValueValidator(0, 'Min 0'), django.core.validators.MaxValueValidator(100, 'Max 100')], verbose_name='Number of repseq to report')),
                ('status', models.CharField(default='new', editable=False, max_length=10, verbose_name='Status')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
